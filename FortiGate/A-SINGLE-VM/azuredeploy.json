{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "String",
            "metadata": {
                "description": "Username for the FortiGate VM"
            }
        },
        "adminPassword": {
            "type": "SecureString",
            "metadata": {
                "description": "Password for the FortiGate VM"
            }
        },
        "fortiGateNamePrefix": {
            "type": "String",
            "metadata": {
                "description": "Naming prefix for all deployed resources. The FortiGate VMs will have the suffix '-FGT-A' and '-FGT-B'. For example if the prefix is 'ACME-01' the FortiGates will be named 'ACME-01-FGT-A' and 'ACME-01-FGT-B'"
            }
        },
        "fortiGateImageSKU": {
            "defaultValue": "fortinet_fg-vm",
            "allowedValues": [
                "fortinet_fg-vm",
                "fortinet_fg-vm_payg_2022"
            ],
            "type": "String",
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately"
            }
        },
        "fortiGateImageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "6.2.0",
                "6.2.2",
                "6.2.4",
                "6.2.5",
                "6.4.0",
                "6.4.2",
                "6.4.3",
                "6.4.5",
                "6.4.6",
                "6.4.7",
                "6.4.8",
                "7.0.0",
                "7.0.1",
                "7.0.2",
                "7.0.3",
                "7.0.4",
                "7.0.5",
                "latest"
            ],
            "type": "String",
            "metadata": {
                "description": "Select the image version"
            }
        },
        "fortiGateAdditionalCustomData": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
            }
        },
        "instanceType": {
            "defaultValue": "Standard_D4as_v4",
            "allowedValues": [
                 "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F2s_v2",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D2_v4",
                "Standard_D4_v4",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D32_v4",
                "Standard_D2s_v4",
                "Standard_D4s_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D2a_v4",
                "Standard_D4a_v4",
                "Standard_D8a_v4",
                "Standard_D16a_v4",
                "Standard_D32a_v4",
                "Standard_D2as_v4",
                "Standard_D4as_v4",
                "Standard_D8as_v4",
                "Standard_D16as_v4",
                "Standard_D32as_v4",
                "Standard_D2_v5",
                "Standard_D4_v5",
                "Standard_D8_v5",
                "Standard_D16_v5",
                "Standard_D32_v5",
                "Standard_D2s_v5",
                "Standard_D4s_v5",
                "Standard_D8s_v5",
                "Standard_D16s_v5",
                "Standard_D32s_v5",
                "Standard_D2as_v5",
                "Standard_D4as_v5",
                "Standard_D8as_v5",
                "Standard_D16as_v5",
                "Standard_D32as_v5",
                "Standard_D2ads_v5",
                "Standard_D4ads_v5",
                "Standard_D8ads_v5",
                "Standard_D16ads_v5",
                "Standard_D32ads_v5"
            ],
            "type": "String",
            "metadata": {
                "description": "Virtual Machine size selection - must be F4 or other instance that supports 4 NICs"
            }
        },
        "acceleratedNetworking": {
            "defaultValue": false,
            "allowedValues": [
                false,
                true
            ],
            "type": "Bool",
            "metadata": {
                "description": "Accelerated Networking enables direct connection between the VM and network card. Only available on 2 CPU F/Fs and 4 CPU D/Dsv2, D/Dsv3, E/Esv3, Fsv2, Lsv2, Ms/Mms and Ms/Mmsv2"
            }
        },
        "publicIP1NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing",
                "none"
            ],
            "type": "String",
            "metadata": {
                "description": "Choose between an existing or new public IP address linked to the external interface of the FortiGate VM"
            }
        },
        "publicIP1Name": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-PIP' as the suffix"
            }
        },
        "publicIP1ResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "publicIP1AddressType": {
            "defaultValue": "Static",
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "type": "String",
            "metadata": {
                "description": "Type of public IP address"
            }
        },
        "publicIP1SKU": {
            "defaultValue": "Standard",
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "type": "String",
            "metadata": {
                "description": "Type of public IP address"
            }
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure virtual network, required if utilizing an existing VNET. If no name is provided the default name will be the Resource Group Name as the Prefix and '-VNET' as the suffix"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource Group containing the existing virtual network, leave blank if a new VNET is being utilize"
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "172.16.136.0/22",
            "type": "String",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "subnet1Name": {
            "defaultValue": "ExternalSubnet",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1Prefix": {
            "defaultValue": "172.16.136.0/26",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "subnet1StartAddress": {
            "defaultValue": "172.16.136.4",
            "type": "String",
            "metadata": {
                "description": "Subnet 1 start address, 1 consecutive private IPs are required"
            }
        },
        "subnet2Name": {
            "defaultValue": "InternalSubnet",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Subnet"
            }
        },
        "subnet2Prefix": {
            "defaultValue": "172.16.136.64/26",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "subnet2StartAddress": {
            "defaultValue": "172.16.136.68",
            "type": "String",
            "metadata": {
                "description": "Subnet 2 start address, 1 consecutive private IPs are required"
            }
        },
        "subnet3Name": {
            "defaultValue": "ProtectedASubnet",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 Name"
            }
        },
        "subnet3Prefix": {
            "defaultValue": "172.16.137.0/24",
            "type": "String",
            "metadata": {
                "description": "Subnet 3 Prefix"
            }
        },
        "serialConsole": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Enable Serial Console"
            }
        },
        "fortiManager": {
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "String",
            "metadata": {
                "description": "Connect to FortiManager"
            }
        },
        "fortiManagerIP": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiManager IP or DNS name to connect to on port TCP/541"
            }
        },
        "fortiManagerSerial": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiManager serial number to add the deployed FortiGate into the FortiManager"
            }
        },
        "fortiGateLicenseBYOL": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseFlexVM": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "FortiGate BYOL Flex-VM license token"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "fortinetTags": {
            "defaultValue": {
                "publisher": "Fortinet",
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925831VM"
            },
            "type": "Object"
        }
    },
    "variables": {
        "imagePublisher": "fortinet",
        "imageOffer": "fortinet_fortigate-vm_v5",
        "vnetName_var": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('fortiGateNamePrefix')), parameters('vnetName'))]",
        "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet1Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet1Name')))]",
        "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet2Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet2Name')))]",
        "fgtVmName_var": "[format('{0}-FGT-A', parameters('fortiGateNamePrefix'))]",
        "fmgCustomData": "[if(equals(parameters('fortiManager'), 'yes'), format('\nconfig system central-management\nset type fortimanager\n set fmg {0}\nset serial-number {1}\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n', parameters('fortiManagerIP'), parameters('fortiManagerSerial')), '')]",
        "customDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVM'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVM')))]",
        "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
        "customDataBody": "[format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\nedit 1\nset gateway {0}\nset device port1\nnext\nedit 2\nset dst {1}\nset gateway {2}\nset device port2\nnext\nend\nconfig system interface\nedit port1\nset mode static\nset ip {3}/{4}\nset description external\nset allowaccess ping ssh https\nnext\nedit port2\nset mode static\nset ip {5}/{6}\nset description internal\nset allowaccess ping ssh https\nnext\nend\n{7}{8}\n{9}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn1IPfgt'), variables('sn1CIDRmask'), variables('sn2IPfgt'), variables('sn2CIDRmask'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('customDataFlexVM'))]",
        "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"fgtlicense\"\n\n",
        "customDataFooter": "\n--12345--\n",
        "customDataCombined": "[format('{0}{1}{2}{3}{4}', variables('customDataHeader'), variables('customDataBody'), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOL'), variables('customDataFooter'))]",
        "fgtCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOL'), ''), variables('customDataBody'), variables('customDataCombined')))]",
        "routeTableProtectedName_var": "[format('{0}-RouteTable-{1}', parameters('fortiGateNamePrefix'), parameters('subnet3Name'))]",
        "routeTableProtectedId": "[resourceId('Microsoft.Network/routeTables', variables('routeTableProtectedName_var'))]",
        "fgtNic1Name_var": "[format('{0}-Nic1', variables('fgtVmName_var'))]",
        "fgtNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgtNic1Name_var'))]",
        "fgtNic2Name_var": "[format('{0}-Nic2', variables('fgtVmName_var'))]",
        "fgtNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgtNic2Name_var'))]",
        "serialConsoleStorageAccountName_var": "[format('console{0}', uniqueString(resourceGroup().id))]",
        "serialConsoleStorageAccountType": "Standard_LRS",
        "serialConsoleEnabled": "[if(equals(parameters('serialConsole'), 'yes'), true(), false())]",
        "publicIP1Name_var": "[if(equals(parameters('publicIP1Name'), ''), format('{0}-FGT-PIP', parameters('fortiGateNamePrefix')), parameters('publicIP1Name'))]",
        "publicIP1Id": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var')), resourceId(parameters('publicIP1ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var')))]",
        "publicIP1AddressId": {
            "id": "[variables('publicIP1Id')]"
        },
        "NSGName_var": "[format('{0}-{1}-NSG', parameters('fortiGateNamePrefix'), uniqueString(resourceGroup().id))]",
        "NSGId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName_var'))]",
        "sn1IPArray": "[split(parameters('subnet1Prefix'), '.')]",
        "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
        "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'), '/')]",
        "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
        "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]), 1))]",
        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
        "sn1GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), variables('sn1IPArray3'))]",
        "sn1IPStartAddress": "[split(parameters('subnet1StartAddress'), '.')]",
        "sn1IPfgt": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), int(variables('sn1IPStartAddress')[3]))]",
        "sn2IPArray": "[split(parameters('subnet2Prefix'), '.')]",
        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'), '/')]",
        "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]), 1))]",
        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
        "sn2GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), variables('sn2IPArray3'))]",
        "sn2IPStartAddress": "[split(parameters('subnet2StartAddress'), '.')]",
        "sn2IPfgt": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), int(variables('sn2IPStartAddress')[3]))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[variables('serialConsoleStorageAccountName_var')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('serialConsoleStorageAccountType')]"
            },
            "kind": "Storage",
            "condition": "[equals(parameters('serialConsole'), 'yes')]"
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-04-01",
            "name": "[variables('routeTableProtectedName_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "routes": [
                    {
                        "name": "VirtualNetwork",
                        "properties": {
                            "addressPrefix": "[parameters('vnetAddressPrefix')]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('sn2IPfgt')]"
                        }
                    },
                    {
                        "name": "Subnet",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]",
                            "nextHopType": "VnetLocal"
                        }
                    },
                    {
                        "name": "Default",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('sn2IPfgt')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-04-01",
            "name": "[variables('vnetName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTableProtectedName_var'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]",
                            "routeTable": {
                                "id": "[variables('routeTableProtectedId')]"
                            }
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "name": "[variables('NSGName_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[variables('publicIP1Name_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "[parameters('publicIP1SKU')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIP1AddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[format('{0}-{1}', toLower(variables('fgtVmName_var')), uniqueString(resourceGroup().id))]"
                }
            },
            "condition": "[equals(parameters('publicIP1NewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgtNic1Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName_var'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfgt')]",
                            "privateIPAllocationMethod": "Static",
                            "publicIPAddress": "[if(not(equals(parameters('publicIP1NewOrExisting'), 'none')), variables('publicIP1AddressId'), json('null'))]",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('NSGId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgtNic2Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('NSGName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('sn2IPfgt')]",
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('NSGId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('fgtVmName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgtNic1Name_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgtNic2Name_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiGateImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "osProfile": {
                    "computerName": "[variables('fgtVmName_var')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('fgtCustomData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiGateImageSKU')]",
                        "version": "[parameters('fortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fgtNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fgtNic2Id')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('serialConsoleEnabled')]",
                        "storageUri": "[if(equals(parameters('serialConsole'), 'yes'), reference(variables('serialConsoleStorageAccountName_var'), '2021-08-01').primaryEndpoints.blob, json('null'))]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "fortiGatePublicIP": {
            "type": "String",
            "value": "[if(and(equals(parameters('publicIP1NewOrExisting'), 'new'), equals(parameters('publicIP1AddressType'), 'Standard')), reference(variables('publicIP1Id')).ipAddress, '')]"
        },
        "fortiGateFQDN": {
            "type": "String",
            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).dnsSettings.fqdn, '')]"
        }
    }
}