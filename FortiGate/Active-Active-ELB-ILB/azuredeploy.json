{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the FortiGate VM"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the FortiGate VM"
            }
        },
        "fortiGateNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "Naming prefix for all deployed resources. The FortiGate VMs will have the suffix '-FGT-A' and '-FGT-B'. For example if the prefix is 'ACME-01' the FortiGates will be named 'ACME-01-FGT-A' and 'ACME-01-FGT-B'"
            }
        },
        "fortiGateImageSKU": {
            "defaultValue": "fortinet_fg-vm",
            "allowedValues": [
                "fortinet_fg-vm",
                "fortinet_fg-vm_payg_2022"
            ],
            "type": "string",
            "metadata": {
                "description": "Identifies whether to to use PAYG (on demand licensing) or BYOL license model (where license is purchased separately)"
            }
        },
        "fortiGateImageVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "6.2.0",
                "6.2.2",
                "6.2.4",
                "6.2.5",
                "6.4.0",
                "6.4.2",
                "6.4.3",
                "6.4.5",
                "6.4.6",
                "6.4.7",
                "6.4.8",
                "7.0.0",
                "7.0.1",
                "7.0.2",
                "7.0.3",
                "7.0.4",
                "7.0.5",
                "latest"
            ],
            "type": "string",
            "metadata": {
                "description": "Select the image version"
            }
        },
        "fortiGateAdditionalCustomData": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "The ARM template provides a basic configuration. Additional configuration can be added here."
            }
        },
        "instanceType": {
            "defaultValue": "Standard_D4as_v4",
            "allowedValues": [
                "Standard_F2s",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F2",
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F2s_v2",
                "Standard_F4s_v2",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_DS1_v2",
                "Standard_DS2_v2",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D2s_v3",
                "Standard_D4s_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D2_v4",
                "Standard_D4_v4",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D32_v4",
                "Standard_D2s_v4",
                "Standard_D4s_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D2a_v4",
                "Standard_D4a_v4",
                "Standard_D8a_v4",
                "Standard_D16a_v4",
                "Standard_D32a_v4",
                "Standard_D2as_v4",
                "Standard_D4as_v4",
                "Standard_D8as_v4",
                "Standard_D16as_v4",
                "Standard_D32as_v4",
                "Standard_D2_v5",
                "Standard_D4_v5",
                "Standard_D8_v5",
                "Standard_D16_v5",
                "Standard_D32_v5",
                "Standard_D2s_v5",
                "Standard_D4s_v5",
                "Standard_D8s_v5",
                "Standard_D16s_v5",
                "Standard_D32s_v5",
                "Standard_D2as_v5",
                "Standard_D4as_v5",
                "Standard_D8as_v5",
                "Standard_D16as_v5",
                "Standard_D32as_v5",
                "Standard_D2ads_v5",
                "Standard_D4ads_v5",
                "Standard_D8ads_v5",
                "Standard_D16ads_v5",
                "Standard_D32ads_v5"
            ],
            "type": "string",
            "metadata": {
                "description": "Virtual Machine size selection"
            }
        },
        "availabilityOptions": {
            "defaultValue": "Availability Set",
            "allowedValues": [
                "Availability Set",
                "Availability Zones"
            ],
            "type": "string",
            "metadata": {
                "description": "Deploy FortiGate VMs in an Availability Set or Availability Zones. If Availability Zones deployment is selected but the location does not support Availability Zones an Availability Set will be deployed. If Availability Zones deployment is selected and Availability Zones are available in the location, FortiGate A will be placed in Zone 1, FortiGate B will be placed in Zone 2"
            }
        },
        "acceleratedNetworking": {
            "defaultValue": true,
            "allowedValues": [
                false,
                true
            ],
            "type": "bool",
            "metadata": {
                "description": "Accelerated Networking enables direct connection between the VM and network card. Only available on 2 CPU F/Fs and 4 CPU D/Dsv2, D/Dsv3, E/Esv3, Fsv2, Lsv2, Ms/Mms and Ms/Mmsv2"
            }
        },
        "publicIP1NewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "string",
            "metadata": {
                "description": "Public IP for the Load Balancer for inbound and outbound data of the FortiGate VMs"
            }
        },
        "publicIP1Name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of Public IP address, if no name is provided the default name will be the Resource Group Name as the Prefix and '-FGT-PIP' as the suffix"
            }
        },
        "publicIP1ResourceGroup": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "string",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Name of the Azure virtual network, required if utilizing and existing VNET. If no name is provided the default name will be the Resource Group Name as the Prefix and '-VNET' as the suffix"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Resource Group containing the existing virtual network, leave blank if a new VNET is being utilized"
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "172.16.136.0/22",
            "type": "string",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "subnet1Name": {
            "defaultValue": "ExternalSubnet",
            "type": "string",
            "metadata": {
                "description": "Subnet 1 Name"
            }
        },
        "subnet1Prefix": {
            "defaultValue": "172.16.136.0/26",
            "type": "string",
            "metadata": {
                "description": "Subnet 1 Prefix"
            }
        },
        "subnet1StartAddress": {
            "defaultValue": "172.16.136.4",
            "type": "string",
            "metadata": {
                "description": "Subnet 1 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet2Name": {
            "defaultValue": "InternalSubnet",
            "type": "string",
            "metadata": {
                "description": "Subnet 2 Name"
            }
        },
        "subnet2Prefix": {
            "defaultValue": "172.16.136.64/26",
            "type": "string",
            "metadata": {
                "description": "Subnet 2 Prefix"
            }
        },
        "subnet2StartAddress": {
            "defaultValue": "172.16.136.68",
            "type": "string",
            "metadata": {
                "description": "Subnet 2 start address, 2 consecutive private IPs are required"
            }
        },
        "subnet3Name": {
            "defaultValue": "ProtectedASubnet",
            "type": "string",
            "metadata": {
                "description": "Subnet 3 Name"
            }
        },
        "subnet3Prefix": {
            "defaultValue": "172.16.137.0/24",
            "type": "string",
            "metadata": {
                "description": "Subnet 3 Prefix"
            }
        },
        "serialConsole": {
            "defaultValue": "yes",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "string",
            "metadata": {
                "description": "Enable Serial Console"
            }
        },
        "fortiManager": {
            "defaultValue": "no",
            "allowedValues": [
                "yes",
                "no"
            ],
            "type": "string",
            "metadata": {
                "description": "Connect to FortiManager"
            }
        },
        "fortiManagerIP": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "FortiManager IP or DNS name to connect to on port TCP/541"
            }
        },
        "fortiManagerSerial": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "FortiManager serial number to add the deployed FortiGate into the FortiManager"
            }
        },
        "fortiGateLicenseBYOLA": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Primary FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseBYOLB": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Secondary FortiGate BYOL license content"
            }
        },
        "fortiGateLicenseFlexVMA": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Primary FortiGate BYOL Flex-VM license token"
            }
        },
        "fortiGateLicenseFlexVMB": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Secondary FortiGate BYOL Flex-VM license token"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "fortinetTags": {
            "defaultValue": {
                "publisher": "Fortinet",
                "template": "Active-Active-ELB-ILB",
                "provider": "6EB3B02F-50E5-4A3E-8CB8-2E12925831AA"
            },
            "type": "object"
        }
    },
    "variables": {
        "imagePublisher": "fortinet",
        "imageOffer": "fortinet_fortigate-vm_v5",
        "availabilitySetName_var": "[format('{0}-AvailabilitySet', parameters('fortiGateNamePrefix'))]",
        "availabilitySetId": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName_var'))]"
        },
        "vnetName_var": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('fortiGateNamePrefix')), parameters('vnetName'))]",
        "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet1Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet1Name')))]",
        "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet2Name')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('subnet2Name')))]",
        "fgaVmName_var": "[format('{0}-FGT-A', parameters('fortiGateNamePrefix'))]",
        "fgbVmName_var": "[format('{0}-FGT-B', parameters('fortiGateNamePrefix'))]",
        "fmgCustomData": "[if(equals(parameters('fortiManager'), 'yes'), format('\nconfig system central-management\nset type fortimanager\n set fmg {0}\nset serial-number {1}\nend\n config system interface\n edit port1\n append allowaccess fgfm\n end\n config system interface\n edit port2\n append allowaccess fgfm\n end\n', parameters('fortiManagerIP'), parameters('fortiManagerSerial')), '')]",
        "fgaCustomDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVMA'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVMA')))]",
        "fgBCustomDataFlexVM": "[if(equals(parameters('fortiGateLicenseFlexVMB'), ''), '', format('exec vm-license {0}\n', parameters('fortiGateLicenseFlexVMB')))]",
        "customDataHeader": "Content-Type: multipart/mixed; boundary=\"12345\"\nMIME-Version: 1.0\n--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"config\"\n\n",
        "fgaCustomDataBody": "[format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway {0}\n set device port1\n next\n edit 2\n set dst {1}\n set gateway {2}\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway {3}\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway {4}\n next\n end\n config system probe-response\n set mode http-probe\n end\n config system interface\n edit port1\n set mode static\n set ip {5}/{6}\n set description external\n set allowaccess ping ssh https probe-response\n next\n edit port2\n set mode static\n set ip {7}/{8}\n set description internal\n set allowaccess ping ssh https probe-response\n next\n end\n{9}{10}\n{11}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn2GatewayIP'), variables('sn1GatewayIP'), variables('sn1IPfga'), variables('sn1CIDRmask'), variables('sn2IPfga'), variables('sn2CIDRmask'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgaCustomDataFlexVM'))]",
        "fgbCustomDataBody": "[format('config system sdn-connector\nedit AzureSDN\nset type azure\nnext\nend\nconfig router static\n edit 1\n set gateway {0}\n set device port1\n next\n edit 2\n set dst {1}\n set gateway {2}\n set device port2\n next\n edit 3\nset dst 168.63.129.16 255.255.255.255\nset device port2\n set gateway {3}\n next\nedit 4\nset dst 168.63.129.16 255.255.255.255\nset device port1\n set gateway {4}\n next\n end\n config system probe-response\n set mode http-probe\n end\n config system interface\n edit port1\n set mode static\n set ip {5}/{6}\n set description external\n set allowaccess ping ssh https probe-response\n next\n edit port2\n set mode static\n set ip {7}/{8}\n set description internal\n set allowaccess ping ssh https probe-response\n next\n end\n{9}{10}\n{11}\n', variables('sn1GatewayIP'), parameters('vnetAddressPrefix'), variables('sn2GatewayIP'), variables('sn2GatewayIP'), variables('sn1GatewayIP'), variables('sn1IPfgb'), variables('sn1CIDRmask'), variables('sn2IPfgb'), variables('sn2CIDRmask'), variables('fmgCustomData'), parameters('fortiGateAdditionalCustomData'), variables('fgBCustomDataFlexVM'))]",
        "customDataLicenseHeader": "--12345\nContent-Type: text/plain; charset=\"us-ascii\"\nMIME-Version: 1.0\nContent-Transfer-Encoding: 7bit\nContent-Disposition: attachment; filename=\"fgtlicense\"\n\n",
        "customDataFooter": "--12345--\n",
        "fgaCustomDataCombined": "[format('{0}{1}{2}{3}{4}', variables('customDataHeader'), variables('fgaCustomDataBody'), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLA'), variables('customDataFooter'))]",
        "fgbCustomDataCombined": "[format('{0}{1}{2}{3}{4}', variables('customDataHeader'), variables('fgbCustomDataBody'), variables('customDataLicenseHeader'), parameters('fortiGateLicenseBYOLB'), variables('customDataFooter'))]",
        "fgaCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOLA'), ''), variables('fgaCustomDataBody'), variables('fgaCustomDataCombined')))]",
        "fgbCustomData": "[base64(if(equals(parameters('fortiGateLicenseBYOLB'), ''), variables('fgbCustomDataBody'), variables('fgbCustomDataCombined')))]",
        "routeTable3Name_var": "[format('{0}-RouteTable-{1}', parameters('fortiGateNamePrefix'), parameters('subnet3Name'))]",
        "routeTable3Id": "[resourceId('Microsoft.Network/routeTables', variables('routeTable3Name_var'))]",
        "fgaNic1Name_var": "[format('{0}-Nic1', variables('fgaVmName_var'))]",
        "fgaNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic1Name_var'))]",
        "fgaNic2Name_var": "[format('{0}-Nic2', variables('fgaVmName_var'))]",
        "fgaNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic2Name_var'))]",
        "fgbNic1Name_var": "[format('{0}-Nic1', variables('fgbVmName_var'))]",
        "fgbNic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic1Name_var'))]",
        "fgbNic2Name_var": "[format('{0}-Nic2', variables('fgbVmName_var'))]",
        "fgbNic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic2Name_var'))]",
        "serialConsoleStorageAccountName_var": "[format('console{0}', uniqueString(resourceGroup().id))]",
        "serialConsoleStorageAccountType": "Standard_LRS",
        "serialConsoleEnabled": "[if(equals(parameters('serialConsole'), 'yes'), true(), false())]",
        "publicIP1Name_var": "[if(equals(parameters('publicIP1Name'), ''), format('{0}-FGT-PIP', parameters('fortiGateNamePrefix')), parameters('publicIP1Name'))]",
        "publicIP1Id": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var')), resourceId(parameters('publicIP1ResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var')))]",
        "nsgName_var": "[format('{0}-NSG-Allow-All', parameters('fortiGateNamePrefix'))]",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
        "sn1IPArray": "[split(parameters('subnet1Prefix'), '.')]",
        "sn1IPArray2ndString": "[string(variables('sn1IPArray')[3])]",
        "sn1IPArray2nd": "[split(variables('sn1IPArray2ndString'), '/')]",
        "sn1CIDRmask": "[string(int(variables('sn1IPArray2nd')[1]))]",
        "sn1IPArray3": "[string(add(int(variables('sn1IPArray2nd')[0]), 1))]",
        "sn1IPArray2": "[string(int(variables('sn1IPArray')[2]))]",
        "sn1IPArray1": "[string(int(variables('sn1IPArray')[1]))]",
        "sn1IPArray0": "[string(int(variables('sn1IPArray')[0]))]",
        "sn1GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), variables('sn1IPArray3'))]",
        "sn1IPStartAddress": "[split(parameters('subnet1StartAddress'), '.')]",
        "sn1IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), int(variables('sn1IPStartAddress')[3]))]",
        "sn1IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn1IPArray0'), variables('sn1IPArray1'), variables('sn1IPArray2'), add(int(variables('sn1IPStartAddress')[3]), 1))]",
        "sn2IPArray": "[split(parameters('subnet2Prefix'), '.')]",
        "sn2IPArray2ndString": "[string(variables('sn2IPArray')[3])]",
        "sn2IPArray2nd": "[split(variables('sn2IPArray2ndString'), '/')]",
        "sn2CIDRmask": "[string(int(variables('sn2IPArray2nd')[1]))]",
        "sn2IPArray3": "[string(add(int(variables('sn2IPArray2nd')[0]), 1))]",
        "sn2IPArray2": "[string(int(variables('sn2IPArray')[2]))]",
        "sn2IPArray1": "[string(int(variables('sn2IPArray')[1]))]",
        "sn2IPArray0": "[string(int(variables('sn2IPArray')[0]))]",
        "sn2GatewayIP": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), variables('sn2IPArray3'))]",
        "sn2IPStartAddress": "[split(parameters('subnet2StartAddress'), '.')]",
        "sn2IPlb": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), int(variables('sn2IPStartAddress')[3]))]",
        "sn2IPfga": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 1))]",
        "sn2IPfgb": "[format('{0}.{1}.{2}.{3}', variables('sn2IPArray0'), variables('sn2IPArray1'), variables('sn2IPArray2'), add(int(variables('sn2IPStartAddress')[3]), 2))]",
        "internalLBName_var": "[format('{0}-InternalLoadBalancer', parameters('fortiGateNamePrefix'))]",
        "internalLBFEName": "[format('{0}-ILB-{1}-FrontEnd', parameters('fortiGateNamePrefix'), parameters('subnet2Name'))]",
        "internalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('internalLBName_var'), variables('internalLBFEName'))]",
        "internalLBBEName": "[format('{0}-ILB-{1}-BackEnd', parameters('fortiGateNamePrefix'), parameters('subnet2Name'))]",
        "internalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('internalLBName_var'), variables('internalLBBEName'))]",
        "internalLBProbeName": "lbprobe",
        "internalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('internalLBName_var'), variables('internalLBProbeName'))]",
        "externalLBName_NatRule_FGAdminPerm_fga": "[format('{0}FGAdminPerm', variables('fgaVmName_var'))]",
        "externalLBId_NatRule_FGAdminPerm_fga": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('externalLBName_var'), variables('externalLBName_NatRule_FGAdminPerm_fga'))]",
        "externalLBName_NatRule_SSH_fga": "[format('{0}SSH', variables('fgaVmName_var'))]",
        "externalLBId_NatRule_SSH_fga": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('externalLBName_var'), variables('externalLBName_NatRule_SSH_fga'))]",
        "externalLBName_NatRule_FGAdminPerm_fgb": "[format('{0}FGAdminPerm', variables('fgbVmName_var'))]",
        "externalLBId_NatRule_FGAdminPerm_fgb": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('externalLBName_var'), variables('externalLBName_NatRule_FGAdminPerm_fgb'))]",
        "externalLBName_NatRule_SSH_fgb": "[format('{0}SSH', variables('fgbVmName_var'))]",
        "externalLBId_NatRule_SSH_fgb": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('externalLBName_var'), variables('externalLBName_NatRule_SSH_fgb'))]",
        "externalLBName_var": "[format('{0}-ExternalLoadBalancer', parameters('fortiGateNamePrefix'))]",
        "externalLBFEName": "[format('{0}-ELB-{1}-FrontEnd', parameters('fortiGateNamePrefix'), parameters('subnet1Name'))]",
        "externalLBFEId": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('externalLBName_var'), variables('externalLBFEName'))]",
        "externalLBBEName": "[format('{0}-ELB-{1}-BackEnd', parameters('fortiGateNamePrefix'), parameters('subnet1Name'))]",
        "externalLBBEId": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('externalLBName_var'), variables('externalLBBEName'))]",
        "externalLBProbeName": "lbprobe",
        "externalLBProbeId": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('externalLBName_var'), variables('externalLBProbeName'))]",
        "useAZ": "[and(not(empty(pickZones('Microsoft.Compute', 'virtualMachines', parameters('location')))), equals(parameters('availabilityOptions'), 'Availability Zones'))]",
        "zone1": [
            "1"
        ],
        "zone2": [
            "2"
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-02-01",
            "name": "[variables('serialConsoleStorageAccountName_var')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('serialConsoleStorageAccountType')]"
            },
            "kind": "Storage",
            "condition": "[equals(parameters('serialConsole'), 'yes')]"
        },
        {
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2021-07-01",
            "name": "[variables('availabilitySetName_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 2
            },
            "condition": "[not(variables('useAZ'))]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-04-01",
            "name": "[variables('vnetName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', variables('routeTable3Name_var'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet3Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3Prefix')]",
                            "routeTable": {
                                "id": "[variables('routeTable3Id')]"
                            }
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-04-01",
            "name": "[variables('internalLBName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('internalLBFEName')]",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPlb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('internalLBBEName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('internalLBFEId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('internalLBBEId')]"
                            },
                            "probe": {
                                "id": "[variables('internalLBProbeId')]"
                            },
                            "protocol": "All",
                            "frontendPort": 0,
                            "backendPort": 0,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 5
                        },
                        "name": "lbruleFEall"
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-04-01",
            "name": "[variables('routeTable3Name_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "routes": [
                    {
                        "name": "toDefault",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[variables('sn2IPlb')]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "name": "[variables('nsgName_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[variables('publicIP1Name_var')]",
            "location": "[parameters('location')]",
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[format('{0}-{1}', toLower(parameters('fortiGateNamePrefix')), uniqueString(resourceGroup().id))]"
                }
            },
            "condition": "[equals(parameters('publicIP1NewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2020-04-01",
            "name": "[variables('externalLBName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP1Name_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('externalLBFEName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[variables('publicIP1Id')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('externalLBBEName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('externalLBBEId')]"
                            },
                            "probe": {
                                "id": "[variables('externalLBProbeId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 5
                        },
                        "name": "ExternalLBRule-FE-http"
                    },
                    {
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "backendAddressPool": {
                                "id": "[variables('externalLBBEId')]"
                            },
                            "probe": {
                                "id": "[variables('externalLBProbeId')]"
                            },
                            "protocol": "Udp",
                            "frontendPort": 10551,
                            "backendPort": 10551,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 5
                        },
                        "name": "ExternalLBRule-FE-udp10551"
                    }
                ],
                "inboundNatRules": [
                    {
                        "name": "[variables('externalLBName_NatRule_SSH_fga')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 50030,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('externalLBName_NatRule_FGAdminPerm_fga')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 40030,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('externalLBName_NatRule_SSH_fgb')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 50031,
                            "backendPort": 22,
                            "enableFloatingIP": false
                        }
                    },
                    {
                        "name": "[variables('externalLBName_NatRule_FGAdminPerm_fgb')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('externalLBFEId')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 40031,
                            "backendPort": 443,
                            "enableFloatingIP": false
                        }
                    }
                ],
                "probes": [
                    {
                        "properties": {
                            "protocol": "Tcp",
                            "port": 8008,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        },
                        "name": "lbprobe"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgaNic1Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('externalLBName_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfga')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('externalLBBEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('externalLBId_NatRule_SSH_fga')]"
                                },
                                {
                                    "id": "[variables('externalLBId_NatRule_FGAdminPerm_fga')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgbNic1Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('externalLBName_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic1Name_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn1IPfgb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('externalLBBEId')]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[variables('externalLBId_NatRule_SSH_fgb')]"
                                },
                                {
                                    "id": "[variables('externalLBId_NatRule_FGAdminPerm_fgb')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgaNic2Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/loadBalancers', variables('internalLBName_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPfga')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('internalLBBEId')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-04-01",
            "name": "[variables('fgbNic2Name_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic2Name_var'))]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('internalLBName_var'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAddress": "[variables('sn2IPfgb')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[variables('internalLBBEId')]"
                                }
                            ]
                        }
                    }
                ],
                "enableIPForwarding": true,
                "enableAcceleratedNetworking": "[parameters('acceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('fgaVmName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic1Name_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgaNic2Name_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "zones": "[if(variables('useAZ'), variables('zone1'), json('null'))]",
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiGateImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), json('null'))]",
                "osProfile": {
                    "computerName": "[variables('fgaVmName_var')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('fgaCustomData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiGateImageSKU')]",
                        "version": "[parameters('fortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fgaNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fgaNic2Id')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('serialConsoleEnabled')]",
                        "storageUri": "[if(equals(parameters('serialConsole'), 'yes'), reference(variables('serialConsoleStorageAccountName_var'), '2021-08-01').primaryEndpoints.blob, json('null'))]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-07-01",
            "name": "[variables('fgbVmName_var')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic1Name_var'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('fgbNic2Name_var'))]"
            ],
            "tags": {
                "provider": "[toUpper(parameters('fortinetTags').provider)]"
            },
            "zones": "[if(variables('useAZ'), variables('zone2'), json('null'))]",
            "identity": {
                "type": "SystemAssigned"
            },
            "plan": {
                "name": "[parameters('fortiGateImageSKU')]",
                "publisher": "[variables('imagePublisher')]",
                "product": "[variables('imageOffer')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "availabilitySet": "[if(not(variables('useAZ')), variables('availabilitySetId'), json('null'))]",
                "osProfile": {
                    "computerName": "[variables('fgbVmName_var')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[variables('fgbCustomData')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('fortiGateImageSKU')]",
                        "version": "[parameters('fortiGateImageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 30,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('fgbNic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('fgbNic2Id')]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "[variables('serialConsoleEnabled')]",
                        "storageUri": "[if(equals(parameters('serialConsole'), 'yes'), reference(variables('serialConsoleStorageAccountName_var'), '2021-08-01').primaryEndpoints.blob, json('null'))]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "fortiGatePublicIP": {
            "type": "string",
            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).ipAddress, '')]"
        },
        "fortiGateFQDN": {
            "type": "string",
            "value": "[if(equals(parameters('publicIP1NewOrExisting'), 'new'), reference(variables('publicIP1Id')).dnsSettings.fqdn, '')]"
        }
    }
}