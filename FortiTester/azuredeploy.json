{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "The region where these resources should be deployed (default is the resource group region)"
            }
        },
        "deploymentPrefix": {
            "type": "String",
            "metadata": {
                "description": "The Prefix to be appended to this deployments resources"
            }
        },
        "osVersion": {
            "defaultValue": "latest",
            "allowedValues": [
                "3.7.00",
                "3.8.0",
                "7.1.0",
                "latest"
            ],
            "type": "String",
            "metadata": {
                "description": "FortiTester version to be installed"
            }
        },
        "instanceType": {
            "defaultValue": "Standard_F8s",
            "allowedValues": [
                "Standard_F4",
                "Standard_F8",
                "Standard_F16",
                "Standard_F4s",
                "Standard_F8s",
                "Standard_F16s",
                "Standard_F8s_v2",
                "Standard_F16s_v2",
                "Standard_F32s_v2",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_D32s_v3"
            ],
            "type": "String",
            "metadata": {
                "description": "Virtual Machine size selection"
            }
        },
        "publicIPNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Public IP for FortiTester for management purposes"
            }
        },
        "publicIPName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of Public IP address for FortiTester, if no name is provided the default name will be the Deployment Prefix as the Prefix and '-MGMT-PIP' as the suffix"
            }
        },
        "publicIPResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Public IP Resource Group, this value is required if an existing Public IP is selected"
            }
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPassword": {
            "type": "SecureString"
        },
        "vnetNewOrExisting": {
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "type": "String",
            "metadata": {
                "description": "Identify whether to use a new or existing vnet"
            }
        },
        "vnetName": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Name of the Azure virtual network, required if utilizing and existing VNET. If no name is provided the default name will be the Resource Group Name as the Prefix and '-VNET' as the suffix"
            }
        },
        "vnetResourceGroup": {
            "defaultValue": "",
            "type": "String",
            "metadata": {
                "description": "Resource Group containing the existing virtual network, leave blank if a new VNET is being utilized"
            }
        },
        "vnetAddressPrefix": {
            "defaultValue": "172.16.136.0/21",
            "type": "String",
            "metadata": {
                "description": "Virtual Network Address prefix"
            }
        },
        "MgmtSubnet": {
            "defaultValue": "ManagementSubnet",
            "type": "String",
            "metadata": {
                "description": "Management Subnet for FortiTester Access"
            }
        },
        "MgmtSubnetPrefix": {
            "defaultValue": "172.16.136.0/24",
            "type": "String",
            "metadata": {
                "description": "Management Subnet Prefix"
            }
        },
        "Traffic1Subnet": {
            "defaultValue": "Traffic-A-Subnet",
            "type": "String",
            "metadata": {
                "description": "First Traffic Subnet Name"
            }
        },
        "Traffic1SubnetPrefix": {
            "defaultValue": "172.16.137.0/24",
            "type": "String",
            "metadata": {
                "description": "Traffic 1 Subnet Prefix"
            }
        },
        "Traffic2Subnet": {
            "defaultValue": "Traffic-B-Subnet",
            "type": "String",
            "metadata": {
                "description": "Second Traffic Subnet Name"
            }
        },
        "Traffic2SubnetPrefix": {
            "defaultValue": "172.16.138.0/24",
            "type": "String",
            "metadata": {
                "description": "Traffic 2 Subnet Prefix"
            }
        }
    },
    "variables": {
        "nic1Name": "[format('{0}-Mgmt-NIC', parameters('deploymentPrefix'))]",
        "nic2Name": "[format('{0}-Traffic-A-NIC', parameters('deploymentPrefix'))]",
        "nic3Name": "[format('{0}-Traffic-B-NIC', parameters('deploymentPrefix'))]",
        "vnetName_var": "[if(equals(parameters('vnetName'), ''), format('{0}-VNET', parameters('deploymentPrefix')), parameters('vnetName'))]",
        "subnet1Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('MgmtSubnet')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('MgmtSubnet')))]",
        "subnet2Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('Traffic1Subnet')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('Traffic1Subnet')))]",
        "subnet3Id": "[if(equals(parameters('vnetNewOrExisting'), 'new'), resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('Traffic2Subnet')), resourceId(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName_var'), parameters('Traffic2Subnet')))]",
        "publicIPName_var": "[if(equals(parameters('publicIPName'), ''), format('{0}-MGMT-PIP', parameters('deploymentPrefix')), parameters('publicIPName'))]",
        "publicIPId": "[if(equals(parameters('publicIPNewOrExisting'), 'new'), resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName_var')), resourceId(parameters('publicIPResourceGroup'), 'Microsoft.Network/publicIPAddresses', variables('publicIPName_var')))]",
        "nic1Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
        "nic2Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
        "nic3Id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3Name'))]",
        "vmName": "[format('{0}-FortiTester', parameters('deploymentPrefix'))]",
        "nsgName_var": "[format('{0}-NSG', parameters('deploymentPrefix'))]",
        "nsgId": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-04-01",
            "name": "[variables('publicIPName_var')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[format('{0}-{1}', toLower(variables('vmName')), uniqueString(resourceGroup().id))]"
                }
            },
            "condition": "[equals(parameters('publicIPNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-04-01",
            "name": "[variables('vnetName_var')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('MgmtSubnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('MgmtSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Traffic1Subnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('Traffic1SubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[parameters('Traffic2Subnet')]",
                        "properties": {
                            "addressPrefix": "[parameters('Traffic2SubnetPrefix')]"
                        }
                    }
                ]
            },
            "condition": "[equals(parameters('vnetNewOrExisting'), 'new')]"
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "name": "[variables('nic1Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet1Id')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[variables('publicIPId')]"
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "name": "[variables('nic2Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet2Id')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2021-03-01",
            "name": "[variables('nic3Name')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName_var'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName_var'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnet3Id')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "enableAcceleratedNetworking": true,
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-04-01",
            "name": "[variables('nsgName_var')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAllInbound",
                        "properties": {
                            "description": "Allow all in",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "AllowAllOutbound",
                        "properties": {
                            "description": "Allow all out",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 105,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[variables('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic1Name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic2Name'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nic3Name'))]"
            ],
            "plan": {
                "name": "fts-vm-byol",
                "publisher": "fortinet",
                "product": "fortinet-fortitester"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('instanceType')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage"
                    },
                    "imageReference": {
                        "publisher": "fortinet",
                        "offer": "fortinet-fortitester",
                        "sku": "fts-vm-byol",
                        "version": "[parameters('osVersion')]"
                    },
                    "dataDisks": [
                        {
                            "diskSizeGB": 64,
                            "lun": 0,
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "properties": {
                                "primary": true
                            },
                            "id": "[variables('nic1Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('nic2Id')]"
                        },
                        {
                            "properties": {
                                "primary": false
                            },
                            "id": "[variables('nic3Id')]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}